/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package logisticsui;

import jdk.nashorn.internal.scripts.JD;
import module.ManagerSystem;
import object.*;
import util.Data;
import util.JDBC;

import javax.swing.*;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.*;

/**
 *
 * @author 向光性
 */
public class ManagerHomePage extends javax.swing.JFrame {

    /** Creates new form AdminMain */
    public ManagerHomePage() {
        initComponents();
        this.pack();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        purchaserDialog = new javax.swing.JDialog();
        purchaserScrollPane = new javax.swing.JScrollPane();
        purchaserTable = new javax.swing.JTable();
        purchaserCancel = new javax.swing.JButton();
        purchaserConfirm = new javax.swing.JButton();
        pickerDialog = new javax.swing.JDialog();
        pickerScrollPane = new javax.swing.JScrollPane();
        pickerTable = new javax.swing.JTable();
        pickerCancel = new javax.swing.JButton();
        pickerConfirm = new javax.swing.JButton();
        commodityDialog = new javax.swing.JDialog();
        commodityScrollPane = new javax.swing.JScrollPane();
        commodityTable = new javax.swing.JTable();
        commodityCancel = new javax.swing.JButton();
        commodityConfirm = new javax.swing.JButton();
        purchasePlanDialog = new javax.swing.JDialog();
        purchasePlanScrollPane = new javax.swing.JScrollPane();
        purchasePlanTable = new javax.swing.JTable();
        purchasePlanCancel = new javax.swing.JButton();
        purchasePlanConfirm = new javax.swing.JButton();
        pickPlanDialog = new javax.swing.JDialog();
        pickPlanScrollPane = new javax.swing.JScrollPane();
        pickPlanTable = new javax.swing.JTable();
        pickPlanCancel = new javax.swing.JButton();
        pickPlanConfirm = new javax.swing.JButton();
        checkStorageDialog = new javax.swing.JDialog();
        checkStorageScrollPane = new javax.swing.JScrollPane();
        checkStorageTable = new javax.swing.JTable();
        checkStorageCancel = new javax.swing.JButton();
        checkStorageConfirm = new javax.swing.JButton();
        passwordChangeDialog = new javax.swing.JDialog();
        oldPasswordTF = new javax.swing.JTextField();
        newPasswordTF = new javax.swing.JTextField();
        newPasswordAgainTF = new javax.swing.JTextField();
        passwordChangeConfirm = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        purchaser = new javax.swing.JButton();
        picker = new javax.swing.JButton();
        commodity = new javax.swing.JButton();
        purchasePlan = new javax.swing.JButton();
        pickPlan = new javax.swing.JButton();
        checkStorage = new javax.swing.JButton();
        passwordChange = new javax.swing.JButton();

        purchaserDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        purchaserDialog.setAlwaysOnTop(true);
        purchaserDialog.setFocusableWindowState(true);
        purchaserDialog.setModal(true);
        purchaserDialog.setResizable(false);
        purchaserDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                purchaserDialogWindowClosed(evt);
            }
        });
        purchaserTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null,},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "工号", "密码", "姓名", "性别", "电话号码"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        purchaserScrollPane.setViewportView(purchaserTable);

        purchaserCancel.setText("取消更改");
        purchaserCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                purchaserCancelMouseClicked(evt);
            }
        });

        purchaserConfirm.setText("确认更改");
        purchaserConfirm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                purchaserConfirmMouseClicked(evt);
            }
        });
        purchaserConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchaserConfirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout purchaserDialogLayout = new javax.swing.GroupLayout(purchaserDialog.getContentPane());
        purchaserDialog.getContentPane().setLayout(purchaserDialogLayout);
        purchaserDialogLayout.setHorizontalGroup(
            purchaserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(purchaserScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
            .addGroup(purchaserDialogLayout.createSequentialGroup()
                .addGap(186, 186, 186)
                .addComponent(purchaserCancel)
                .addGap(60, 60, 60)
                .addComponent(purchaserConfirm)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        purchaserDialogLayout.setVerticalGroup(
            purchaserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(purchaserDialogLayout.createSequentialGroup()
                .addComponent(purchaserScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(purchaserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(purchaserCancel)
                    .addComponent(purchaserConfirm))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        pickerDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        pickerDialog.setAlwaysOnTop(true);
        pickerDialog.setFocusableWindowState(true);
        pickerDialog.setModal(true);
        pickerDialog.setResizable(false);
        pickerDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                pickerDialogWindowClosed(evt);
            }
        });

        pickerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "工号", "密码", "姓名", "性别", "电话号码"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        pickerScrollPane.setViewportView(pickerTable);

        pickerCancel.setText("取消更改");
        pickerCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pickerCancelMouseClicked(evt);
            }
        });

        pickerConfirm.setText("确认更改");
        pickerConfirm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pickerConfirmMouseClicked(evt);
            }
        });
        pickerConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pickerConfirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pickerDialogLayout = new javax.swing.GroupLayout(pickerDialog.getContentPane());
        pickerDialog.getContentPane().setLayout(pickerDialogLayout);
        pickerDialogLayout.setHorizontalGroup(
            pickerDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pickerScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
            .addGroup(pickerDialogLayout.createSequentialGroup()
                .addGap(186, 186, 186)
                .addComponent(pickerCancel)
                .addGap(60, 60, 60)
                .addComponent(pickerConfirm)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pickerDialogLayout.setVerticalGroup(
            pickerDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pickerDialogLayout.createSequentialGroup()
                .addComponent(pickerScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pickerDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pickerCancel)
                    .addComponent(pickerConfirm))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        commodityDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        commodityDialog.setAlwaysOnTop(true);
        commodityDialog.setFocusableWindowState(true);
        commodityDialog.setModal(true);
        commodityDialog.setResizable(false);
        commodityDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                commodityDialogWindowClosed(evt);
            }
        });

        commodityTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "商品编号", "商品名称", "生产公司"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        commodityScrollPane.setViewportView(commodityTable);

        commodityCancel.setText("取消更改");
        commodityCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                commodityCancelMouseClicked(evt);
            }
        });

        commodityConfirm.setText("确认更改");
        commodityConfirm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                commodityConfirmMouseClicked(evt);
            }
        });
        commodityConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commodityConfirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout commodityDialogLayout = new javax.swing.GroupLayout(commodityDialog.getContentPane());
        commodityDialog.getContentPane().setLayout(commodityDialogLayout);
        commodityDialogLayout.setHorizontalGroup(
            commodityDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(commodityScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
            .addGroup(commodityDialogLayout.createSequentialGroup()
                .addGap(186, 186, 186)
                .addComponent(commodityCancel)
                .addGap(60, 60, 60)
                .addComponent(commodityConfirm)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        commodityDialogLayout.setVerticalGroup(
            commodityDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(commodityDialogLayout.createSequentialGroup()
                .addComponent(commodityScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(commodityDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(commodityCancel)
                    .addComponent(commodityConfirm))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        purchasePlanDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        purchasePlanDialog.setAlwaysOnTop(true);
        purchasePlanDialog.setFocusableWindowState(true);
        purchasePlanDialog.setModal(true);
        purchasePlanDialog.setResizable(false);
        purchasePlanDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                purchasePlanDialogWindowClosed(evt);
            }
        });

        purchasePlanTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "采购者工号", "商品编号", "购买日期", "购买数量","0:未完成,1:完成"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        purchasePlanScrollPane.setViewportView(purchasePlanTable);

        purchasePlanCancel.setText("取消更改");
        purchasePlanCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                purchasePlanCancelMouseClicked(evt);
            }
        });

        purchasePlanConfirm.setText("确认更改");
        purchasePlanConfirm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                purchasePlanConfirmMouseClicked(evt);
            }
        });
        purchasePlanConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchasePlanConfirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout purchasePlanDialogLayout = new javax.swing.GroupLayout(purchasePlanDialog.getContentPane());
        purchasePlanDialog.getContentPane().setLayout(purchasePlanDialogLayout);
        purchasePlanDialogLayout.setHorizontalGroup(
            purchasePlanDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(purchasePlanScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
            .addGroup(purchasePlanDialogLayout.createSequentialGroup()
                .addGap(186, 186, 186)
                .addComponent(purchasePlanCancel)
                .addGap(60, 60, 60)
                .addComponent(purchasePlanConfirm)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        purchasePlanDialogLayout.setVerticalGroup(
            purchasePlanDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(purchasePlanDialogLayout.createSequentialGroup()
                .addComponent(purchasePlanScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(purchasePlanDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(purchasePlanCancel)
                    .addComponent(purchasePlanConfirm))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        pickPlanDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        pickPlanDialog.setAlwaysOnTop(true);
        pickPlanDialog.setFocusableWindowState(true);
        pickPlanDialog.setModal(true);
        pickPlanDialog.setResizable(false);
        pickPlanDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                pickPlanDialogWindowClosed(evt);
            }
        });

        pickPlanTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null},
                {null, null, null, null,null}
            },
            new String [] {
                "提货者工号", "商品编号", "提单时间", "提单数量","0:未完成,1:完成",
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class,java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        pickPlanScrollPane.setViewportView(pickPlanTable);

        pickPlanCancel.setText("取消更改");
        pickPlanCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pickPlanCancelMouseClicked(evt);
            }
        });

        pickPlanConfirm.setText("确认更改");
        pickPlanConfirm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pickPlanConfirmMouseClicked(evt);
            }
        });
        pickPlanConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pickPlanConfirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pickPlanDialogLayout = new javax.swing.GroupLayout(pickPlanDialog.getContentPane());
        pickPlanDialog.getContentPane().setLayout(pickPlanDialogLayout);
        pickPlanDialogLayout.setHorizontalGroup(
            pickPlanDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pickPlanScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
            .addGroup(pickPlanDialogLayout.createSequentialGroup()
                .addGap(186, 186, 186)
                .addComponent(pickPlanCancel)
                .addGap(60, 60, 60)
                .addComponent(pickPlanConfirm)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pickPlanDialogLayout.setVerticalGroup(
            pickPlanDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pickPlanDialogLayout.createSequentialGroup()
                .addComponent(pickPlanScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pickPlanDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pickPlanCancel)
                    .addComponent(pickPlanConfirm))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        checkStorageDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        checkStorageDialog.setAlwaysOnTop(true);
        checkStorageDialog.setFocusableWindowState(false);
        checkStorageDialog.setModal(true);
        checkStorageDialog.setResizable(false);
        checkStorageDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                checkStorageDialogWindowClosed(evt);
            }
        });

        checkStorageTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "商品编号", "商品名称", "商品数量"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        checkStorageTable.setEnabled(false);
        checkStorageScrollPane.setViewportView(checkStorageTable);

        javax.swing.GroupLayout checkStorageDialogLayout = new javax.swing.GroupLayout(checkStorageDialog.getContentPane());
        checkStorageDialog.getContentPane().setLayout(checkStorageDialogLayout);
        checkStorageDialogLayout.setHorizontalGroup(
            checkStorageDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(checkStorageScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
//            .addGroup(checkStorageDialogLayout.createSequentialGroup()
//                .addGap(186, 186, 186)
//                .addComponent(checkStorageCancel)
//                .addGap(60, 60, 60)
//                .addComponent(checkStorageConfirm)
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        checkStorageDialogLayout.setVerticalGroup(
            checkStorageDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkStorageDialogLayout.createSequentialGroup()
                .addComponent(checkStorageScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                .addGroup(checkStorageDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(checkStorageCancel)
//                    .addComponent(checkStorageConfirm))
//                .addGap(0, 12, Short.MAX_VALUE))
        ));

        passwordChangeDialog.setAlwaysOnTop(true);
        passwordChangeDialog.setResizable(false);

        oldPasswordTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oldPasswordTFActionPerformed(evt);
            }
        });

        passwordChangeConfirm.setText("确认");
        passwordChangeConfirm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                passwordChangeConfirmMouseClicked(evt);
            }
        });

        jLabel1.setText("旧密码");

        jLabel2.setText("新密码");

        jLabel3.setText("再次输入新密码");

        jLabel4.setText("密 码 修 改");

        javax.swing.GroupLayout passwordChangeDialogLayout = new javax.swing.GroupLayout(passwordChangeDialog.getContentPane());
        passwordChangeDialog.getContentPane().setLayout(passwordChangeDialogLayout);
        passwordChangeDialogLayout.setHorizontalGroup(
            passwordChangeDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, passwordChangeDialogLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(passwordChangeConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(107, 107, 107))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, passwordChangeDialogLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(passwordChangeDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(passwordChangeDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newPasswordTF, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newPasswordAgainTF, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(oldPasswordTF, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37))
            .addGroup(passwordChangeDialogLayout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        passwordChangeDialogLayout.setVerticalGroup(
            passwordChangeDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(passwordChangeDialogLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(passwordChangeDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(oldPasswordTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(26, 26, 26)
                .addGroup(passwordChangeDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newPasswordTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(26, 26, 26)
                .addGroup(passwordChangeDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newPasswordAgainTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(passwordChangeConfirm)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        purchaser.setText("采购员管理");
        purchaser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                purchaserMouseClicked(evt);
            }
        });
        purchaser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchaserActionPerformed(evt);
            }
        });

        picker.setText("提货员管理");
        picker.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pickerMouseClicked(evt);
            }
        });

        commodity.setText("货物管理");
        commodity.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                commodityMouseClicked(evt);
            }
        });
        commodity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commodityActionPerformed(evt);
            }
        });

        purchasePlan.setText("采购计划");
        purchasePlan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                purchasePlanMouseClicked(evt);
            }
        });

        pickPlan.setText("提货计划");
        pickPlan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pickPlanMouseClicked(evt);
            }
        });

        checkStorage.setText("清点库存");
        checkStorage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkStorageMouseClicked(evt);
            }
        });


        passwordChange.setText("密码修改");
        passwordChange.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                passwordChangeMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pickPlan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(purchaser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(picker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(commodity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(purchasePlan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkStorage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordChange, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(64, 64, 64))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(purchaser)
                .addGap(18, 18, 18)
                .addComponent(picker)
                .addGap(18, 18, 18)
                .addComponent(commodity)
                .addGap(18, 18, 18)
                .addComponent(purchasePlan)
                .addGap(18, 18, 18)
                .addComponent(pickPlan)
                .addGap(18, 18, 18)
                .addComponent(checkStorage)
                .addGap(18, 18, 18)
                .addComponent(passwordChange)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("jFrame");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void purchaserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchaserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_purchaserActionPerformed

    private void purchaserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_purchaserMouseClicked
        // TODO add your handling code here:
        // 读取数据并在新窗口显示
        ManagerSystem.showData(Purchaser.class,"Purchaser",purchaserDialog, purchaserTable,"purchaser");
    }//GEN-LAST:event_purchaserMouseClicked

    private void commodityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commodityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_commodityActionPerformed

    private void pickerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pickerMouseClicked
        // TODO add your handling code here:
        ManagerSystem.showData(Picker.class,"Picker",pickerDialog,pickerTable,"picker");
    }//GEN-LAST:event_pickerMouseClicked

    private void oldPasswordTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oldPasswordTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_oldPasswordTFActionPerformed

    private void purchaserCancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_purchaserCancelMouseClicked
        // TODO add your handling code here:
        ManagerSystem.showData(Purchaser.class,"Purchaser",purchaserDialog, purchaserTable,"purchaser");
    }//GEN-LAST:event_purchaserCancelMouseClicked

    private void purchaserConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchaserConfirmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_purchaserConfirmActionPerformed

    private void purchaserDialogWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_purchaserDialogWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_purchaserDialogWindowClosed

    private void purchaserConfirmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_purchaserConfirmMouseClicked
        // TODO add your handling code here:
        // 列名称
        List<String> columnName = new ArrayList<String>();
        columnName.add("purchaser_id");
        columnName.add("purchaser_passwd");
        columnName.add("purchaser_name");
        columnName.add("purchaser_sex");
        columnName.add("purchaser_tel");
        // 数据为int类型的下标志
        int[] integerIndex = new int[1];
        integerIndex[0] = 1;
        // 确认按钮的处理
        ManagerSystem.confirm(Purchaser.class,"Purchaser", purchaserDialog, purchaserTable,"purchaser",columnName,1,integerIndex);
    }//GEN-LAST:event_purchaserConfirmMouseClicked

    private void pickerCancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pickerCancelMouseClicked
        // TODO add your handling code here:
        ManagerSystem.showData(Picker.class,"Picker",pickerDialog,pickerTable,"picker");
    }//GEN-LAST:event_pickerCancelMouseClicked

    private void pickerConfirmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pickerConfirmMouseClicked
        // TODO add your handling code here:
        List<String> columnName = new ArrayList<String>();
        columnName.add("picker_id");
        columnName.add("picker_passwd");
        columnName.add("picker_name");
        columnName.add("picker_sex");
        columnName.add("picker_tel");
        int[] integerIndex = new int[1];
        integerIndex[0] = 1;
        // 数据处理
        ManagerSystem.confirm(Picker.class,"Picker",pickerDialog,pickerTable,"picker",columnName,1,integerIndex);
    }//GEN-LAST:event_pickerConfirmMouseClicked

    private void pickerConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pickerConfirmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pickerConfirmActionPerformed

    private void pickerDialogWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_pickerDialogWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_pickerDialogWindowClosed

    private void commodityMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_commodityMouseClicked
        // TODO add your handling code here:
        ManagerSystem.showData(Commodity.class,"Commodity",commodityDialog,commodityTable,"commodity");
    }//GEN-LAST:event_commodityMouseClicked

    private void commodityCancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_commodityCancelMouseClicked
        // TODO add your handling code here:
        ManagerSystem.showData(Commodity.class,"Commodity",commodityDialog,commodityTable,"commodity");
    }//GEN-LAST:event_commodityCancelMouseClicked

    private void commodityConfirmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_commodityConfirmMouseClicked
        // TODO add your handling code here:
        List<String> columnName = new ArrayList<String>();
        columnName.add("commodity_id");
        columnName.add("commodity_name");
        columnName.add("product_company");
        int[] integerIndex = new int[1];
        integerIndex[0] = 1;
        // 数据处理
        ManagerSystem.confirm(Commodity.class,"Commodity",commodityDialog,commodityTable,"commodity",columnName,1,integerIndex);

    }//GEN-LAST:event_commodityConfirmMouseClicked

    private void commodityConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commodityConfirmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_commodityConfirmActionPerformed

    private void commodityDialogWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_commodityDialogWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_commodityDialogWindowClosed

    private void passwordChangeConfirmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passwordChangeConfirmMouseClicked
        // TODO add your handling code here:
        ManagerSystem.changePassword(passwordChangeDialog,oldPasswordTF,newPasswordTF,newPasswordAgainTF);
    }//GEN-LAST:event_passwordChangeConfirmMouseClicked

    private void purchasePlanCancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_purchasePlanCancelMouseClicked
        // TODO add your handling code here:
        ManagerSystem.showData(PurchaseTable.class,"PurchaseTable",purchasePlanDialog,purchasePlanTable,"purchase");
    }//GEN-LAST:event_purchasePlanCancelMouseClicked

    private void purchasePlanConfirmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_purchasePlanConfirmMouseClicked
        // TODO add your handling code here:
        List<String> columnName = new ArrayList<String>();
        columnName.add("commodity_id");
        columnName.add("purchaser_id");
        columnName.add("purchase_date");
        columnName.add("purchase_quantity");
        columnName.add("purchase_isdone");

        int[] integerIndex = new int[4];
        integerIndex[0] = 1;
        integerIndex[1] = 2;
        integerIndex[2] = 4;
        integerIndex[3] = 5;

        ManagerSystem.confirm(PurchaseTable.class,"PurchaseTable",purchasePlanDialog,purchasePlanTable,"purchase",columnName,3, integerIndex);
    }//GEN-LAST:event_purchasePlanConfirmMouseClicked

    private void purchasePlanConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchasePlanConfirmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_purchasePlanConfirmActionPerformed

    private void purchasePlanDialogWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_purchasePlanDialogWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_purchasePlanDialogWindowClosed

    private void pickPlanCancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pickPlanCancelMouseClicked
        // TODO add your handling code here:
        ManagerSystem.showData(PickTable.class,"PickTable",pickPlanDialog,pickPlanTable,"pick");
    }//GEN-LAST:event_pickPlanCancelMouseClicked

    private void pickPlanConfirmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pickPlanConfirmMouseClicked
        // TODO add your handling code here:
        List<String> columnName = new ArrayList<String>();
        columnName.add("commodity_id");
        columnName.add("picker_id");
        columnName.add("pick_date");
        columnName.add("pick_quantity");
        columnName.add("pick_isdone");

        int[] integerIndex = new int[4];
        integerIndex[0] = 1;
        integerIndex[1] = 2;
        integerIndex[2] = 4;
        integerIndex[3] = 5;

        ManagerSystem.confirm(PickTable.class,"PickTable",pickPlanDialog,pickPlanTable,"pick",columnName,3,integerIndex);


    }//GEN-LAST:event_pickPlanConfirmMouseClicked

    private void pickPlanConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pickPlanConfirmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pickPlanConfirmActionPerformed

    private void pickPlanDialogWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_pickPlanDialogWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_pickPlanDialogWindowClosed

    private void passwordChangeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passwordChangeMouseClicked
        // TODO add your handling code here:
        ManagerSystem.showPasswordChanngeDialog(passwordChangeDialog,oldPasswordTF,newPasswordTF,newPasswordAgainTF);
    }//GEN-LAST:event_passwordChangeMouseClicked

    private void checkStorageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkStorageMouseClicked
        // TODO add your handling code here:
        ManagerSystem.showData(Repository.class,"Repository",checkStorageDialog,checkStorageTable,"commodity_detail");
    }//GEN-LAST:event_checkStorageMouseClicked

    private void pickPlanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pickPlanMouseClicked
        // TODO add your handling code here:
        ManagerSystem.showData(PickTable.class,"PickTable",pickPlanDialog,pickPlanTable,"pick");
    }//GEN-LAST:event_pickPlanMouseClicked

    private void purchasePlanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_purchasePlanMouseClicked
        // TODO add your handling code here:
        ManagerSystem.showData(PurchaseTable.class,"PurchaseTable",purchasePlanDialog,purchasePlanTable,"purchase");
    }//GEN-LAST:event_purchasePlanMouseClicked

    private void checkStorageCancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkStorageCancelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_checkStorageCancelMouseClicked

    private void checkStorageConfirmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkStorageConfirmMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_checkStorageConfirmMouseClicked

    private void checkStorageConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkStorageConfirmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkStorageConfirmActionPerformed

    private void checkStorageDialogWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_checkStorageDialogWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkStorageDialogWindowClosed

    private void checkStorageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkStorageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkStorageActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManagerHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManagerHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManagerHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManagerHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManagerHomePage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton checkStorage;
    private javax.swing.JButton checkStorageCancel;
    private javax.swing.JButton checkStorageConfirm;
    private javax.swing.JDialog checkStorageDialog;
    private javax.swing.JScrollPane checkStorageScrollPane;
    private javax.swing.JTable checkStorageTable;
    private javax.swing.JButton commodity;
    private javax.swing.JButton commodityCancel;
    private javax.swing.JButton commodityConfirm;
    private javax.swing.JDialog commodityDialog;
    private javax.swing.JScrollPane commodityScrollPane;
    private javax.swing.JTable commodityTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField newPasswordAgainTF;
    private javax.swing.JTextField newPasswordTF;
    private javax.swing.JTextField oldPasswordTF;
    private javax.swing.JButton passwordChange;
    private javax.swing.JButton passwordChangeConfirm;
    private javax.swing.JDialog passwordChangeDialog;
    private javax.swing.JButton pickPlan;
    private javax.swing.JButton pickPlanCancel;
    private javax.swing.JButton pickPlanConfirm;
    private javax.swing.JDialog pickPlanDialog;
    private javax.swing.JScrollPane pickPlanScrollPane;
    private javax.swing.JTable pickPlanTable;
    private javax.swing.JButton picker;
    private javax.swing.JButton pickerCancel;
    private javax.swing.JButton pickerConfirm;
    private javax.swing.JDialog pickerDialog;
    private javax.swing.JScrollPane pickerScrollPane;
    private javax.swing.JTable pickerTable;
    private javax.swing.JButton purchasePlan;
    private javax.swing.JButton purchasePlanCancel;
    private javax.swing.JButton purchasePlanConfirm;
    private javax.swing.JDialog purchasePlanDialog;
    private javax.swing.JScrollPane purchasePlanScrollPane;
    private javax.swing.JTable purchasePlanTable;
    private javax.swing.JButton purchaser;
    private javax.swing.JButton purchaserCancel;
    private javax.swing.JButton purchaserConfirm;
    private javax.swing.JDialog purchaserDialog;
    private javax.swing.JScrollPane purchaserScrollPane;
    private javax.swing.JTable purchaserTable;
    // End of variables declaration//GEN-END:variables

}
