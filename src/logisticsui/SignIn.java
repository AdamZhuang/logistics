/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package logisticsui;

import util.Data;
import util.JDBC;

import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author 向光性
 */
public class SignIn extends javax.swing.JFrame {

    /**
     * Creates new form SignIn
     */
    public SignIn() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tipDialog = new javax.swing.JDialog();
        tip = new javax.swing.JLabel();
        confirm = new javax.swing.JButton();
        signin = new javax.swing.JButton();
        username = new javax.swing.JTextField();
        password = new javax.swing.JTextField();
        option = new javax.swing.JComboBox<>();

        tipDialog.setTitle("警告");
        tipDialog.setAlwaysOnTop(true);
        tipDialog.setIconImage(null);
        tipDialog.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        tipDialog.setResizable(false);

        tip.setText("账号或者密码错误");

        confirm.setText("确定");
        confirm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                confirmMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout tipDialogLayout = new javax.swing.GroupLayout(tipDialog.getContentPane());
        tipDialog.getContentPane().setLayout(tipDialogLayout);
        tipDialogLayout.setHorizontalGroup(
            tipDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tipDialogLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(confirm)
                .addContainerGap(51, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tipDialogLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tip)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tipDialogLayout.setVerticalGroup(
            tipDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tipDialogLayout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(tip)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(confirm)
                .addGap(18, 18, 18))
        );

        tipDialog.getAccessibleContext().setAccessibleParent(signin);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        signin.setText("登陆");
        signin.setToolTipText("");
        signin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                signinMouseClicked(evt);
            }
        });
        signin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signinActionPerformed(evt);
            }
        });

        username.setForeground(java.awt.Color.lightGray);
        username.setText("用户名");
        username.setToolTipText("");
        username.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                usernameFocusLost(evt);
            }
        });
        username.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usernameMouseClicked(evt);
            }
        });

        password.setForeground(java.awt.Color.lightGray);
        password.setText("密码");
        password.setToolTipText("");
        password.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                passwordFocusLost(evt);
            }
        });
        password.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                passwordMouseClicked(evt);
            }
        });

        option.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "管理员", "采购员", "提货员" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(signin, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(password)
                            .addComponent(username)
                            .addComponent(option, 0, 120, Short.MAX_VALUE))))
                .addContainerGap(85, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(119, Short.MAX_VALUE)
                .addComponent(option, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(signin)
                .addGap(47, 47, 47))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void usernameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usernameMouseClicked
        // TODO add your handling code here:
        if(username.getText().equals("用户名")){
            username.setText("");
            username.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_usernameMouseClicked

    private void usernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameFocusLost
        // TODO add your handling code here:
        if(username.getText().equals("用户名")){
            username.setForeground(Color.LIGHT_GRAY);
        }
    }//GEN-LAST:event_usernameFocusLost

    private void passwordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passwordMouseClicked
        // TODO add your handling code here:
        if(password.getText().equals("密码")){
            password.setText("");
            password.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_passwordMouseClicked

    private void passwordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordFocusLost
        // TODO add your handling code here:
        if(password.getText().equals("密码")){
            password.setForeground(Color.LIGHT_GRAY);
        }
    }//GEN-LAST:event_passwordFocusLost

    private void signinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signinMouseClicked
        // 获取用户类型
        String userType = String.valueOf(option.getSelectedItem());

        // 根据登录用户类型验证用户名以及密码进行登陆
        if(userType.equals("管理员")){

            // 用户名错误弹出提示框（管理员用户名为admin）
            if(!username.getText().equals("admin")){
                tipDialogPop();
                return;
            }

            String sql = "select manager_passwd from manager where manager_username = 'admin'";
            if( passwordVerify(sql,null) == false ){
                tipDialogPop();
                return;
            }

            // 验证成功，登陆界面
            ManagerHomePage managerHomePage = new ManagerHomePage();
            managerHomePage.setVisible(true);
        } else if(userType.equals("采购员")){

            //构建sql语句，以及参数
            String sql = "select * from purchaser where picker_id = ?";
            List<Data> data = new ArrayList<Data>();
            data.add(new Data("Integer",username.getText()));

            //密码验证
            if (passwordVerify(sql, data)) {
                tipDialogPop();
                return;
            }

            // 打开页面
//            PurchaserHomePage purchaserHomePage = new PurchaserHomePage(username.getText());
//            purchaserHomePage.setVisible(true);
        } else if(userType.equals("提货员")){

            //构建sql语句，以及参数
            String sql = "select * from picker where picker_id = ?";
            List<Data> data = new ArrayList<Data>();
            data.add(new Data("Integer",username.getText()));

            //密码验证
            if (passwordVerify(sql, data)) {
                tipDialogPop();
                return;
            }

            // 打开页面
            PickerHomePage pickerHomePage = new PickerHomePage(username.getText());
            pickerHomePage.setVisible(true);
        }
        
        // 关闭当前窗口
        this.dispose();
    }//GEN-LAST:event_signinMouseClicked

    private boolean passwordVerify(String sql, List<Data> list) {
        try {
            //获取结果集
            ResultSet rs = JDBC.getInstance().excuteQuery(sql,list);
            if(rs.next()){
                String pw = rs.getString(1);
                String inputedPW = password.getText();
                if(!pw.equals(inputedPW)){
                    return false;
                }
                return true;
            }else{
                tipDialogPop();
                return false;
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return false;
    }

    private void tipDialogPop() {
        tipDialog.pack();
        tipDialog.setVisible(true);
    }

    private void signinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_signinActionPerformed

    private void confirmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmMouseClicked
        // TODO add your handling code here:
        tipDialog.dispose();
    }//GEN-LAST:event_confirmMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SignIn().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton confirm;
    private javax.swing.JComboBox<String> option;
    private javax.swing.JTextField password;
    private javax.swing.JButton signin;
    private javax.swing.JLabel tip;
    private javax.swing.JDialog tipDialog;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
